
import { Component, OnInit, ViewChild } from '@angular/core';
import { ActivatedRoute, ParamMap, RouterLink } from '@angular/router';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { MatTableDataSource } from '@angular/material/table';


export interface PeriodicElement {
  name: string;
  position: number;
  weight: number;
  symbol: string;
}
//vervang door jouw echt data
const ELEMENT_DATA: PeriodicElement[] = [
  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},
];
@Component({
  selector: '<%= dasherize(name)%>',
  templateUrl: './<%= dasherize(name) %>.component.html',
  styleUrls: ['./<%= dasherize(name) %>.component.scss']
})
export class <%= classify(name)%>Component  {
  @ViewChild(MatPaginator) paginator !: MatPaginator;
    @ViewChild(MatSort) sort !: MatSort;

  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];
  dataSource:any = ELEMENT_DATA;
  empdata: any;

   Filterchange(event: Event) {
        let filvalue = (event.target as HTMLInputElement).value;
        filvalue = filvalue.trim(); // Remove whitespace
        filvalue = filvalue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filvalue;
    }

ngAfterViewInit(): void {
      //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.
      //Add 'implements AfterViewInit' to the class.
      this.dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);
      this.dataSource.paginator = this.paginator;
      this.dataSource.sort = this.sort;

    }
    ngOnInit(): void {
        //hier roep je de get methodes op.
    }
}
