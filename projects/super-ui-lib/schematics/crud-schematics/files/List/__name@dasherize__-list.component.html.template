<div class="container">
<h2>Hotel List</h2>
<form #f="ngForm">
  
  <mat-form-field>
    <mat-label>City:</mat-label>
    <input matInput type="search" [(ngModel)]="filter.city" id="city" name="city">
  </mat-form-field>
  
  <button mat-mini-fab color="primary" (click)="search()" [disabled]="!f?.valid"><mat-icon>search</mat-icon></button>
  <a mat-mini-fab color="accent" [routerLink]="['../hotels', 'new' ]"><mat-icon>add</mat-icon></a>
</form>
<div *ngIf="hotelList.length > 0">
  <!-- todo: figure out better material styling for alerts -->
  <div *ngIf="feedback.message" class="alert alert-{{feedback.type}}">{{ feedback.message }}</div>
  
  <table mat-table #table [dataSource]="hotelList">
    
    <ng-container matColumnDef="id">
      <mat-header-cell *matHeaderCellDef> Id </mat-header-cell>
      <mat-cell *matCellDef="let item"> {{item.id}} </mat-cell>
    </ng-container>
    
    <ng-container matColumnDef="name">
      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>
      <mat-cell *matCellDef="let item"> {{item.name}} </mat-cell>
    </ng-container>
    
    <ng-container matColumnDef="city">
      <mat-header-cell *matHeaderCellDef> City </mat-header-cell>
      <mat-cell *matCellDef="let item"> {{item.city}} </mat-cell>
    </ng-container>
    
    <ng-container matColumnDef="stars">
      <mat-header-cell *matHeaderCellDef> Stars </mat-header-cell>
      <mat-cell *matCellDef="let item"> {{item.stars}} </mat-cell>
    </ng-container>
    
    <ng-container matColumnDef="actions">
      <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>
      <mat-cell *matCellDef="let item">
        <a [routerLink]="['../hotels', item.id ]" mat-raised-button color="primary">Edit</a>&nbsp;
        <button (click)="delete(item)" mat-button color="warn"><mat-icon>delete</mat-icon></button>
      </mat-cell>
    </ng-container>
    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>
    <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>
  </table>
</div>
</div>
